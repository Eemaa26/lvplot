library(lubridate)
library(lubridate)#
getFlights <- function(airport) {#
	require(RMySQL)#
	m <- dbDriver("MySQL")#
	con <- dbConnect(m, user="2009Expo", password="R R0cks", port=3306, dbname="data_expo_2009", host="headnode.stat.iastate.edu")#
#
	#
	flights.dest <- dbGetQuery(con, sprintf("select * from ontime11 where (Dest='%s') and Year >= 2009", airport))#
	flights.dep <- dbGetQuery(con, sprintf("select * from ontime11 where (Origin='%s') and Year >= 2009", airport))#
	#
	flights.dest$wstamp <- flights.dest$WONDate#
	flights.dep$wstamp <- flights.dep$WOFFDate#
	#
	#
	#
	flights <- rbind(flights.dep, flights.dest)#
	flights <- flights[,-(55:89)]#
	#
	flights$wstamp <- gsub("24:00","0:00", flights$wstamp, fixed=TRUE)#
	#
	#
	flights <- flights[order(strptime(flights$wstamp, format="%Y-%m-%d %H:%M", tz="UTC")),]#
	flights$nextflight <- c(as.numeric(diff(strptime(flights$wstamp, format="%Y-%m-%d %H:%M", tz="UTC"))),NA)/60#
	#
	save(flights, file=sprintf("%s-flights.rds", airport))#
	dbDisconnect(con)#
}#
#
getWeather <- function(airport) {#
	require(RMySQL)#
	m <- dbDriver("MySQL")#
	con <- dbConnect(m, user="2009Expo", password="R R0cks", port=3306, dbname="data_expo_2009", host="headnode.stat.iastate.edu")#
#
	#
	winds <- dbGetQuery(con, sprintf("select * from weather11 where Year>=2009 and (iata='%s')",  airport))#
#
	winds$tstamp <- as.POSIXct(winds$DateUTC, tz="UTC")#
	#
	tdiff <- hour(as.POSIXct(winds$Time, format=c(dates=NULL, times="%I:%M %p")))-hour(winds$tstamp)#
	hour(winds$tstamp) <- hour(winds$tstamp) + tdiff#
	winds <- winds[order(winds$tstamp),]#
#
	save(winds, file=sprintf("%s-winds.rds", airport))#
	dbDisconnect(con)#
}#
#
#
alignTime <- function(airport, flights, winds, x="wstamp", y="tstamp") {#
	#
	#
#
	flights$indx <- 1:nrow(flights)#
	mergeflights <- data.frame(flights[, c(x,"indx")], source="flights")#
	mergeflights[,x] <- as.character(mergeflights[,x])#
	#
	winds$indx <- 1:nrow(winds)#
	mergewinds <- data.frame(winds[, c(y,"indx")], source="winds")#
	mergewinds[,y] <- as.character(mergewinds[,y])#
#
	names(mergewinds) <- names(mergeflights)#
	merger <- rbind(mergeflights, mergewinds)#
#
#
	merger <- merger[order(strptime(merger[,x], format="%Y-%m-%d %H:%M", tz="UTC")),]#
#
#
	idx <- which(merger$source=="winds")#
	pidx <- rep(merger$indx[idx], times=c(idx[1],diff(idx)))#
	#
	merger$windx <- NA#
	merger$windx[1:length(pidx)] <- pidx#
	#
	merger <- subset(merger, source=="flights")#
	merger <- merger[order(merger$indx),]#
#
	#
	merger$diff1 <- as.numeric(strptime(merger[,x], format="%Y-%m-%d %H:%M", tz="UTC") - (strptime(winds[merger$windx,y], format="%Y-%m-%d %H:%M", tz="UTC")))#
	merger$windx2 <- merger$windx-1#
	merger$windx2[merger$windx2==0] <- 1#
	merger$diff2 <- as.numeric(strptime(merger[,x], format="%Y-%m-%d %H:%M", tz="UTC") - (strptime(winds[merger$windx2,y], format="%Y-%m-%d %H:%M", tz="UTC")))#
	idx <- which(merger$diff1>merger$diff2)#
	merger$windx[idx] <- merger$windx2[idx]#
	#
	flights_all <- data.frame(flights, winds[merger$windx,])#
	save(flights_all, file=sprintf("%s-all.rds", airport))		#
}#
#
#
#
airport <- "LAX"
getWeather(airport)
load(sprintf('%s-flights.rds', airport)) #
load(sprintf('%s-winds.rds', airport)) #
alignTime(airport, flights, winds)
airport
head(flights)
head(winds)
airport <- "LAX"
	flights$indx <- 1:nrow(flights)#
	mergeflights <- data.frame(flights[, c(x,"indx")], source="flights")#
	mergeflights[,x] <- as.character(mergeflights[,x])#
	#
	winds$indx <- 1:nrow(winds)#
	mergewinds <- data.frame(winds[, c(y,"indx")], source="winds")#
	mergewinds[,y] <- as.character(mergewinds[,y])
x="wstamp", y="tstamp"
	flights$indx <- 1:nrow(flights)#
	mergeflights <- data.frame(flights[, c(x,"indx")], source="flights")#
	mergeflights[,x] <- as.character(mergeflights[,x])
	mergeflights <- data.frame(flights[, c(x,"indx")], source="flights")#
	mergeflights[,x] <- as.character(mergeflights[,x])
	winds$indx <- 1:nrow(winds)#
	mergewinds <- data.frame(winds[, c(y,"indx")], source="winds")#
	mergewinds[,y] <- as.character(mergewinds[,y])
	names(mergewinds) <- names(mergeflights)#
	merger <- rbind(mergeflights, mergewinds)
	merger <- merger[order(strptime(merger[,x], format="%Y-%m-%d %H:%M", tz="UTC")),]
	idx <- which(merger$source=="winds")#
	pidx <- rep(merger$indx[idx], times=c(idx[1],diff(idx)))
	merger$windx <- NA#
	merger$windx[1:length(pidx)] <- pidx#
	#
	merger <- subset(merger, source=="flights")#
	merger <- merger[order(merger$indx),]
	merger$diff1 <- as.numeric(strptime(merger[,x], format="%Y-%m-%d %H:%M", tz="UTC") - (strptime(winds[merger$windx,y], format="%Y-%m-%d %H:%M", tz="UTC")))
	merger$windx2 <- merger$windx-1#
	merger$windx2[merger$windx2==0] <- 1#
	merger$diff2 <- as.numeric(strptime(merger[,x], format="%Y-%m-%d %H:%M", tz="UTC") - (strptime(winds[merger$windx2,y], format="%Y-%m-%d %H:%M", tz="UTC")))#
	idx <- which(merger$diff1>merger$diff2)#
	merger$windx[idx] <- merger$windx2[idx]#
	#
	flights_all <- data.frame(flights, winds[merger$windx,])#
	save(flights_all, file=sprintf("%s-all.rds", airport))
fitness <- read.table("http://www.statsci.org/data/oz/ms212.txt", header=T, sep="\t")
summary(fitness)
dim(fitness)
library(ggplot2)
qplot(Pulse1, Pulse2, geom="point", data=fitness)
qplot(Pulse1, Pulse2, geom="point", data=fitness, colour=factor(Ran))
fitness$dPulse <- fitness$Pulse2 - fitness$Pulse1
qplot(factor(Ran), dPulse, geom="boxplot", data=fitness)
model <- lm(dPulse~Ran, data=fitness)
str(fitness)
model <- lm(dPulse~factor(Ran), data=fitness)
summary(model)
library(DBI)#
library(RMySQL)#
library(ggplot2)#
#
drv <- dbDriver("MySQL")#
#
co <- dbConnect(drv, user="2009Expo", password="R R0cks", port=3306, dbname="recmiler", host="headnode.stat.iastate.edu")
co <- dbConnect(drv, user="heike", password="hh_2008", port=3306, dbname="recmiler", host="headnode.stat.iastate.edu")
dbGetTables(co)
dbGetFields(co)
library(help=DBI)
dbGetQuery(co, "select * from users limit 5")
dbGetQuery(co, "select * from user limit 5")
names(rm)
library(DBI)#
library(RMySQL)#
library(ggplot2)#
#
drv <- dbDriver("MySQL")#
#
co <- dbConnect(drv, user="heike", password="hh_2008", port=3306, dbname="recmiler", host="headnode.stat.iastate.edu")#
#
dbGetQuery(co, "select * from user limit 5")#
names(rm) <-c("ID", "login","pwd")#
dbWriteTable(co, "user", rm, append =T)
user <- dbGetQuery(co, "select * from user limit 5")
rm <- cbind(user, rm)
head(rm,10)
tail(rm,10)
rm <- read.csv(file.choose())
rm <- rm[,-4]
names(rm) <-c("ID", "login","pwd")
library(DBI)#
library(RMySQL)#
library(ggplot2)#
#
drv <- dbDriver("MySQL")#
#
co <- dbConnect(drv, user="heike", password="hh_2008", port=3306, dbname="recmiler", host="headnode.stat.iastate.edu")#
#
user <- dbGetQuery(co, "select * from user limit 5")
rm2 <- rbind(user, rm)
rm2 <- transform(rm,#
ID=ID,#
first=NA,#
last=NA,#
gender=NA,#
byear=NA,#
login=login,#
pwd=pwd,#
contact=NA,#
activities=NA,#
rpe=6,#
workout=NA#
)
dbWriteTable(co, "user", rm, append =T)
head(user)
head(rm)
head(rm2)
dbWriteTable(co, "user", rm2, append =T, row.names=F)
tail(rm2)
dbGetQuery(co, "select sum(Miles), sum(Points) from workouts where UID != 2222 and UID between 1001 and 4040")
recmiles <- dbGetQuery(co, "dbGetQuery(co, "select sum(Miles), sum(Points) from workouts where UID != 2222 and UID between 1001 and 4040")")#
recmiles[is.na(recmiles)] <- 0
recmiles <- dbGetQuery(co, "select sum(Miles), sum(Points) from workouts where UID != 2222 and UID between 1001 and 4040")#
recmiles[is.na(recmiles)] <- 0
recmiles
reschallenge <- dbGetQuery(co, "select UID div 1000 as UID, sum(Miles), sum(Points) from workouts where UID != 2222 and UID between 1001 and 4040 group by UID div 1000")#
challenge <- unlist(reschallenge[1:4,2])#
challenge[is.na(challenge)] <- 0
reschallenge[1:4,2]
reschallenge <- dbGetQuery(co, "select UID div 1000 as UID, sum(Miles), sum(Points) from workouts where UID between 1001 and 4040 group by UID div 1000")#
challenge <- unlist(reschallenge[1:4,2])#
challenge[is.na(challenge)] <- 0
reschallenge[UID==2]
reschallenge[UID==2,]
reschallenge[reschallenge$UID==2,]
reschallenge <- dbGetQuery(co, "select UID div 1000 as UID, sum(Miles), sum(Points) from workouts where UID != 2222 and UID between 1001 and 4040 group by UID div 1000")
if (is.null(reschallenge)) challenge <- rep(0,4)#
else {#
  challenge <- unlist(reschallenge[1:4,2])#
  challenge[is.na(challenge)] <- 0#
}
is.null(reschallenge)
if (nrow(reschallenge)==0) challenge <- rep(0,4)
else {#
  challenge <- unlist(reschallenge[1:4,2])#
  challenge[is.na(challenge)] <- 0#
}
if (nrow(reschallenge)==0) { challenge <- rep(0,4)#
} else {#
  challenge <- unlist(reschallenge[1:4,2])#
  challenge[is.na(challenge)] <- 0#
}
reschallenge <- dbGetQuery(co, "select UID div 1000 as UID, sum(Miles), sum(Points) from workouts where and UID between 1001 and 4040 group by UID div 1000")
reschallenge <- dbGetQuery(co, "select UID div 1000 as UID, sum(Miles), sum(Points) from workouts where UID between 1001 and 4040 group by UID div 1000")
nrow(reschallenge)
reschallenge
challenge <- data.frame(UID=1:4, Miles=rep(0,4))
challenge$Miles[reschallenge$UID] <- reschallenge$Miles
reschallenge$UID
reschallenge$Miles
reschallenge <- dbGetQuery(co, "select UID div 1000 as UID, sum(Miles) as Miles, sum(Points) as Points from workouts where UID between 1001 and 4040 group by UID div 1000")
challenge <- data.frame(UID=1:4, Miles=rep(0,4))#
challenge$Miles[reschallenge$UID] <- reschallenge$Miles
challenge
library(lubridate)#
getFlights <- function(airport) {#
	require(RMySQL)#
	m <- dbDriver("MySQL")#
	con <- dbConnect(m, user="2009Expo", password="R R0cks", port=3306, dbname="data_expo_2009", host="headnode.stat.iastate.edu")#
#
	#
	flights.dest <- dbGetQuery(con, sprintf("select * from ontime11 where (Dest='%s') and Year >= 2009", airport))#
	flights.dep <- dbGetQuery(con, sprintf("select * from ontime11 where (Origin='%s') and Year >= 2009", airport))#
	#
	flights.dest$wstamp <- flights.dest$WONDate#
	flights.dep$wstamp <- flights.dep$WOFFDate#
	#
	#
	#
	flights <- rbind(flights.dep, flights.dest)#
	flights <- flights[,-(55:89)]#
	#
	flights$wstamp <- gsub("24:00","0:00", flights$wstamp, fixed=TRUE)#
	#
	#
	flights <- flights[order(strptime(flights$wstamp, format="%Y-%m-%d %H:%M", tz="UTC")),]#
	flights$nextflight <- c(as.numeric(diff(strptime(flights$wstamp, format="%Y-%m-%d %H:%M", tz="UTC"))),NA)/60#
	#
	save(flights, file=sprintf("%s-flights.rds", airport))#
	dbDisconnect(con)#
}#
#
getWeather <- function(airport) {#
	require(RMySQL)#
	m <- dbDriver("MySQL")#
	con <- dbConnect(m, user="2009Expo", password="R R0cks", port=3306, dbname="data_expo_2009", host="headnode.stat.iastate.edu")#
#
	#
	winds <- dbGetQuery(con, sprintf("select * from weather11 where Year>=2009 and (iata='%s')",  airport))#
#
	winds$tstamp <- as.POSIXct(winds$DateUTC, tz="UTC")#
	#
	tdiff <- hour(as.POSIXct(winds$Time, format=c(dates=NULL, times="%I:%M %p")))-hour(winds$tstamp)#
	hour(winds$tstamp) <- hour(winds$tstamp) + tdiff#
	winds <- winds[order(winds$tstamp),]#
#
	save(winds, file=sprintf("%s-winds.rds", airport))#
	dbDisconnect(con)#
}#
#
#
alignTime <- function(airport, flights, winds, x="wstamp", y="tstamp") {#
	#
	#
#
	flights$indx <- 1:nrow(flights)#
	mergeflights <- data.frame(flights[, c(x,"indx")], source="flights")#
	mergeflights[,x] <- as.character(mergeflights[,x])#
	#
	winds$indx <- 1:nrow(winds)#
	mergewinds <- data.frame(winds[, c(y,"indx")], source="winds")#
	mergewinds[,y] <- as.character(mergewinds[,y])#
#
	names(mergewinds) <- names(mergeflights)#
	merger <- rbind(mergeflights, mergewinds)#
#
#
	merger <- merger[order(strptime(merger[,x], format="%Y-%m-%d %H:%M", tz="UTC")),]#
#
#
	idx <- which(merger$source=="winds")#
	pidx <- rep(merger$indx[idx], times=c(idx[1],diff(idx)))#
	#
	merger$windx <- NA#
	merger$windx[1:length(pidx)] <- pidx#
	#
	merger <- subset(merger, source=="flights")#
	merger <- merger[order(merger$indx),]#
#
	#
	merger$diff1 <- as.numeric(strptime(merger[,x], format="%Y-%m-%d %H:%M", tz="UTC") - (strptime(winds[merger$windx,y], format="%Y-%m-%d %H:%M", tz="UTC")))#
	merger$windx2 <- merger$windx-1#
	merger$windx2[merger$windx2==0] <- 1#
	merger$diff2 <- as.numeric(strptime(merger[,x], format="%Y-%m-%d %H:%M", tz="UTC") - (strptime(winds[merger$windx2,y], format="%Y-%m-%d %H:%M", tz="UTC")))#
	idx <- which(merger$diff1>merger$diff2)#
	merger$windx[idx] <- merger$windx2[idx]#
	#
	flights_all <- data.frame(flights, winds[merger$windx,])#
	save(flights_all, file=sprintf("%s-all.rds", airport))		#
}
airport <- "ORD"#
#
#
#
getFlights(airport) #
getWeather(airport)
	require(RMySQL)#
	m <- dbDriver("MySQL")#
	con <- dbConnect(m, user="2009Expo", password="R R0cks", port=3306, dbname="data_expo_2009", host="headnode.stat.iastate.edu")
	flights.dest <- dbGetQuery(con, sprintf("select * from ontime11 where (Dest='%s') and Year >= 2009", airport))
	flights.dep <- dbGetQuery(con, sprintf("select * from ontime11 where (Origin='%s') and Year >= 2009", airport))
	flights.dest$wstamp <- flights.dest$WONDate#
	flights.dep$wstamp <- flights.dep$WOFFDate#
	#
	#
	#
	flights <- rbind(flights.dep, flights.dest)#
	flights <- flights[,-(55:89)]#
	#
	flights$wstamp <- gsub("24:00","0:00", flights$wstamp, fixed=TRUE)
	flights <- rbind(flights.dep, flights.dest)
write.csv(flights.dest,"ord-flights.csv", row.names=FALSE)
dim(flights.dest)
write.csv(flights.dest[,-(55:89)],"ord-flights.csv", row.names=FALSE)
write.table(flights.dep[,-(55:89)],"ord-flights.csv", sep=",", row.names=FALSE, append=TRUE)
flights <- read.csv("ord-flights.csv")
str(flights)
flights$WOFFDate <- as.character(flights$WOFFDate)
flights$WONDate <- as.character(flights$WONDate)
flights$wstamp <- as.character(flights$wstamp)
	flights$wstamp <- gsub("24:00","0:00", flights$wstamp, fixed=TRUE)
	flights <- flights[order(strptime(flights$wstamp, format="%Y-%m-%d %H:%M", tz="UTC")),]#
	flights$nextflight <- c(as.numeric(diff(strptime(flights$wstamp, format="%Y-%m-%d %H:%M", tz="UTC"))),NA)/60#
	#
	save(flights, file=sprintf("%s-flights.rds", airport))
load(sprintf('%s-flights.rds', airport))
alignTime <- function(airport, flights, winds, x="wstamp", y="tstamp") {#
	#
	#
#
	flights$indx <- 1:nrow(flights)#
	mergeflights <- data.frame(flights[, c(x,"indx")], source="flights")#
	mergeflights[,x] <- as.character(mergeflights[,x])#
	#
	winds$indx <- 1:nrow(winds)#
	mergewinds <- data.frame(winds[, c(y,"indx")], source="winds")#
	mergewinds[,y] <- as.character(mergewinds[,y])#
#
	names(mergewinds) <- names(mergeflights)#
	merger <- rbind(mergeflights, mergewinds)#
#
#
	merger <- merger[order(strptime(merger[,x], format="%Y-%m-%d %H:%M", tz="UTC")),]#
#
#
	idx <- which(merger$source=="winds")#
	pidx <- rep(merger$indx[idx], times=c(idx[1],diff(idx)))#
	#
	merger$windx <- NA#
	merger$windx[1:length(pidx)] <- pidx#
	#
	merger <- subset(merger, source=="flights")#
	merger <- merger[order(merger$indx),]#
#
	#
	merger$diff1 <- as.numeric(strptime(merger[,x], format="%Y-%m-%d %H:%M", tz="UTC") - (strptime(winds[merger$windx,y], format="%Y-%m-%d %H:%M", tz="UTC")))#
	merger$windx2 <- merger$windx-1#
	merger$windx2[merger$windx2==0] <- 1#
	merger$diff2 <- as.numeric(strptime(merger[,x], format="%Y-%m-%d %H:%M", tz="UTC") - (strptime(winds[merger$windx2,y], format="%Y-%m-%d %H:%M", tz="UTC")))#
	idx <- which(merger$diff1>merger$diff2)#
	merger$windx[idx] <- merger$windx2[idx]#
	#
	flights_all <- data.frame(flights, winds[merger$windx,])#
	save(flights_all, file=sprintf("%s-all.rds", airport))		#
}
load(sprintf('%s-winds.rds', airport)) #
alignTime(airport, flights, winds)
airport <- "ORD"
load(sprintf('%s-flights.rds', airport)) #
load(sprintf('%s-winds.rds', airport))
x="wstamp"
y="tstamp"
	flights$indx <- 1:nrow(flights)
	mergeflights <- data.frame(flights[, c(x,"indx")], source="flights")#
	mergeflights[,x] <- as.character(mergeflights[,x])#
	#
	winds$indx <- 1:nrow(winds)#
	mergewinds <- data.frame(winds[, c(y,"indx")], source="winds")#
	mergewinds[,y] <- as.character(mergewinds[,y])
	names(mergewinds) <- names(mergeflights)#
	merger <- rbind(mergeflights, mergewinds)#
#
#
	merger <- merger[order(strptime(merger[,x], format="%Y-%m-%d %H:%M", tz="UTC")),]
#
	idx <- which(merger$source=="winds")#
	pidx <- rep(merger$indx[idx], times=c(idx[1],diff(idx)))#
	#
	merger$windx <- NA#
	merger$windx[1:length(pidx)] <- pidx#
	#
	merger <- subset(merger, source=="flights")#
	merger <- merger[order(merger$indx),]
	merger$diff1 <- as.numeric(strptime(merger[,x], format="%Y-%m-%d %H:%M", tz="UTC") - (strptime(winds[merger$windx,y], format="%Y-%m-%d %H:%M", tz="UTC")))#
	merger$windx2 <- merger$windx-1#
	merger$windx2[merger$windx2==0] <- 1#
	merger$diff2 <- as.numeric(strptime(merger[,x], format="%Y-%m-%d %H:%M", tz="UTC") - (strptime(winds[merger$windx2,y], format="%Y-%m-%d %H:%M", tz="UTC")))#
	idx <- which(merger$diff1>merger$diff2)#
	merger$windx[idx] <- merger$windx2[idx]
	flights_all <- data.frame(flights, winds[merger$windx,])#
	save(flights_all, file=sprintf("%s-all.rds", airport))
save(flights,file="flights-ord.rds")
save(winds[merger$windx,],file="winds-ord.rds")
head(merger$windx)
head(winds[merger$windx,])
w2 <- winds[merger$windx,]
save(w2,file="winds-ord.rds")
rm(winds)
rm(mergeflights)
flights_all <- data.frame(flights, w2)
flights <- data.frame(flights, w2)
dim(flights)
dim(w2)
head(flights[,50:59])
save(data.frame(flights, winds[merger$windx,]), file=sprintf("%s-all.rds", airport))
library(DBI)#
library(RMySQL)#
library(ggplot2)#
#
drv <- dbDriver("MySQL")#
co <- dbConnect(drv, user="2009Expo", password="R R0cks",#
port=3306, dbname="accidents", host="headnode.stat.iastate.edu")#
person <- dbGetQuery(co, "select STATE, YEAR count(*) as drunkdriver from person where DRINKING=1 and SEAT_POS=11 group by STATE, YEAR")
grep("ord",fnames)
fnames <- names(flights)
fnames
flights <- flights[,-c(2,8,9,13,15,16,17,18)]
save(flights,"flights-ord.rds")
save(flights, file="flights-ord.rds")
fnames <- dir()
fnames[grep("ord",fnames)]
load("flights-ord.rds")
load("winds-ord.rds")
flights_all <- data.fram(flights,w2)
flights_all <- data.frame(flights,w2)
save(flights_all,"ORD-all.rds")
save(flights_all,file="ORD-all.rds")
library(DBI)#
library(RMySQL)#
library(ggplot2)#
#
drv <- dbDriver("MySQL")#
co <- dbConnect(drv, user="2009Expo", password="R R0cks",#
port=3306, dbname="accidents", host="headnode.stat.iastate.edu")#
person <- dbGetQuery(co, "select STATE, YEAR count(*) as drunkdriver from person where DRINKING=1 and SEAT_POS=11 group by STATE, YEAR")#
a<-person
person <- dbGetQuery(co, "select STATE, YEAR, count(*) as drunkdriver from person where DRINKING=1 and SEAT_POS=11 group by STATE, YEAR")
a<-person
acc <- read.csv("rate of accident related with alcohol.csv")
acc <- read.csv("/var/folders/u0/u00PlOvR2RWFXk+BYmhYLU++GH2/-Tmp-/com.apple.mail.drag-T0x100520020.tmp.k3ak3a/rate of accident related with alcohol.csv")
head(acc)
summary(acc)
e<-merge(a,acc,by=c("STATE","YEAR"))#
e$rate<-with(e, drunkdriver/(Miles^0.25*Drivers^0.75))
e$states <- tolower(e$State)
acc.median <- ddply(e, .(states), summarize,#
	rate = median(rate, na.rm=T),#
	mrate = mean(rate, na.rm=T)#
)
library(maps)#
states <- map_data("state")
states.acc <- merge(states, acc.median, by.x="region", by.y="states")
states.acc <- states.acc[order(states.acc$order),]#
qplot(long, lat, group=group, geom="polygon", data=states.acc, fill=rate) + scale_fill_gradient2()
qplot(long, lat, group=group, geom="polygon", data=states.acc, fill=mrate) + scale_fill_gradient2()
qplot(rate,mrate, data=acc.median)
alumni <- read.csv(file.choose())
theme_nothing <- function (base_size = 12) {#
  structure(list(#
	panel.grid.minor=theme_blank(), #
	panel.grid.major=theme_blank(), #
	panel.background=theme_blank(), #
	panel.border = theme_blank(), #
	panel.margin = unit(0, "lines"), #
	axis.title.x=theme_blank(), #
	axis.title.y=theme_blank(), #
	axis.line=theme_blank(), #
	axis.ticks=theme_blank(), #
	axis.text.y = theme_blank(), #
	axis.text.x = theme_blank()#
  ), class = "options")#
}
library(ggplot2)#
library(maps)#
states <- map_data("state")#
alumni$region <- tolower(alumni$State)
states.alumni <- merge(states, alumni, by="region", all=T)#
states.alumni <- states.alumni[order(states.alumni$order),]
head(states.alumni)
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State")
lat=mean(lat))
lstates <- ddply(states, .(region),#
long=mean(long),#
lat=mean(lat))
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(long,lat,labels=states), data=lstates, colour="grey55")
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(long,lat,labels=states), data=lstates, colour="grey55", aes.inherit=F)
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(long,lat,labels=states), data=lstates, colour="grey55", inherit.aes=F)
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(long,lat,label=states), data=lstates, colour="grey55", inherit.aes=F)
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(x=long,y=lat,label=states), data=lstates, colour="grey55", inherit.aes=F)
lstates <- ddply(states, .(region),#
long=mean(long),#
lat=mean(lat),#
states=states[1])
lstates <- ddply(states, .(region),summarize,#
long=mean(long),#
lat=mean(lat),#
states=states[1])
lstates <- ddply(states, .(region), summarize,#
long=mean(long),#
lat=mean(lat)
)
lstates <- ddply(states, .(region), summarize,#
long=mean(long),#
lat=mean(lat),#
states=length(states)>0?states[1]:NA)
lstates <- ddply(states, .(region), summarize,#
long=mean(long),#
lat=mean(lat),#
states=length(states)>0?states[1]:0)
length(states)
states <- map_data("state")
lstates <- ddply(states, .(region), summarize,#
long=mean(long),#
lat=mean(lat),#
states=states[1])
head(states)
summary(states)
lstates <- ddply(states, .(region), summarize,#
long=mean(long),#
lat=mean(lat),#
states=region[1])
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(x=long,y=lat,label=region), data=lstates, colour="grey55", inherit.aes=F)
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(x=long,y=lat,label=region), data=lstates, colour="grey55", size=3, inherit.aes=F)
help(geom_text)
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(x=long,y=lat,label=region), data=lstates, colour="grey55", size=3, hjust=0.5, vjust=0.5, inherit.aes=F)
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(x=long,y=lat,label=region), data=lstates, colour="grey55", size=3, hjust=1, vjust=0.5, inherit.aes=F)
lstates <- ddply(states, .(region), summarize,#
long=0.5*max(long)+0.5*min(long),#
lat=0.5*max(lat)+0.5*min(lat),#
states=region[1])#
#
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(x=long,y=lat,label=region), data=lstates, colour="grey55", size=3, hjust=0.5, vjust=0.5, inherit.aes=F)
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(x=long,y=lat,label=region), data=lstates, colour="grey35", size=3, hjust=0.5, vjust=0.5, inherit.aes=F)
lstates <- merge(lstates, alumni, by="states")
lstates <- merge(lstates, alumni, by.x="region", by.y="states")
lstates <- merge(lstates, alumni, by="region")
lstates <- merge(lstates, e, by="region")
lstates <- merge(lstates, e, by.x="region", by.y="states")
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(x=long,y=lat,label=region, colour=rate), data=lstates, colour="grey35", size=3, hjust=0.5, vjust=0.5, inherit.aes=F)
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(x=long,y=lat,label=region, colour=rate), data=lstates, size=3, hjust=0.5, vjust=0.5, inherit.aes=F)
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(x=long,y=lat,label=region, colour=rate), data=lstates, size=3, hjust=0.5, vjust=0.5, inherit.aes=F) + scale_colour_gradient2()
help(cities)
??cities
help(UScities)
help(UScity)
library(help=maps)
help(state)
map('state', fill = TRUE, col = palette())
head(state)
head(region)
head(state$region)
head(states$region)
lstates <- ddply(states, .(region), summarize,#
long=0.5*max(long)+0.5*min(long),#
lat=0.5*max(lat)+0.5*min(lat))
head(e)
lstates$abb <- states.abb
lstates$abb <- state.abb
lstates$abb <- state.abb[-1]
lstates$alumni <- alumni$Alumni.of.Iowa.State
state.abb
lstates$abb <- state.abb[-2]
lstates$abb <- state.abb[-11]
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(x=long,y=lat,label=abb, colour=rate), data=lstates, size=3, hjust=0.5, vjust=0.5, inherit.aes=F) + scale_colour_gradient2()
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(x=long,y=lat,label=abb), data=lstates, size=3, hjust=0.5, vjust=0.5, inherit.aes=F) + scale_colour_gradient2()
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(x=long,y=lat,label=abb), data=lstates, size=5, hjust=0.5, vjust=0.5, inherit.aes=F) + scale_colour_gradient2()
names(alumni)
head(alumni)
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(x=long,y=lat,label=abb, colour=Alumni.of.Iowa.State), data=lstates, size=5, hjust=0.5, vjust=0.5, inherit.aes=F) + scale_colour_gradient2()
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(x=long,y=lat,label=abb, colour=Alumni.of.Iowa.State), data=lstates, size=5, hjust=0.5, vjust=0.5, inherit.aes=F) + scale_colour_gradient2(mid="grey90")
scale_colour_gradient2
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(x=long,y=lat,label=abb, colour=Alumni.of.Iowa.State), data=lstates, size=5, hjust=0.5, vjust=0.5, inherit.aes=F) + scale_colour_gradient2(mid=muted("blue"), high="grey90")
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(x=long,y=lat,label=abb, colour=Alumni.of.Iowa.State), data=lstates, size=8, hjust=0.5, vjust=0.5, inherit.aes=F) + scale_colour_gradient2(mid=muted("blue"), high="grey90")
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(x=long,y=lat,label=abb, colour=Alumni.of.Iowa.State), data=lstates, size=7, hjust=0.5, vjust=0.5, inherit.aes=F) + scale_colour_gradient2(mid=muted("blue"), high="grey90")
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(x=long,y=lat,label=abb, colour=Alumni.of.Iowa.State), data=lstates, size=6, hjust=0.5, vjust=0.5, inherit.aes=F) + scale_colour_gradient2(mid=muted("blue"), high="grey90")
lstates <- ddply(states, .(region), summarize,#
long=0.5*max(long)+0.5*min(long),#
lat=0.5*max(lat)+0.5*min(lat))#
lstates$abb <- state.abb[-11]#
lstates <- merge(lstates, alumni[,c("Alumni.of.Iowa.State","region")], by="region")
lstates <- ddply(states, .(region), summarize,#
long=0.5*max(long)+0.5*min(long),#
longdiff=diff(range(long)),#
lat=0.5*max(lat)+0.5*min(lat)),#
latdiff=diff(range(lat)))
lstates$abb <- state.abb[-11]#
lstates <- merge(lstates, alumni[,c("Alumni.of.Iowa.State","region")], by="region")
summary(lstates)
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(x=long,y=lat,label=abb, colour=Alumni.of.Iowa.State), data=subset(lstates,longdiff>1, size=6, hjust=0.5, vjust=0.5, inherit.aes=F) + scale_colour_gradient2(mid=muted("blue"), high="grey90")
))
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(x=long,y=lat,label=abb, colour=Alumni.of.Iowa.State), data=subset(lstates,longdiff>1), size=6, hjust=0.5, vjust=0.5, inherit.aes=F) + scale_colour_gradient2(mid=muted("blue"), high="grey90")
summary(subset(lstates,longdiff>1))
lstates <- ddply(states, .(region), summarize,#
long=0.5*max(long)+0.5*min(long),#
longdiff=diff(range(long)),#
lat=0.5*max(lat)+0.5*min(lat),#
latdiff=diff(range(lat)))#
lstates$abb <- state.abb[-11]#
lstates <- merge(lstates, alumni[,c("Alumni.of.Iowa.State","region")], by="region")
head(lstates)
lstates$abb
lstates <- ddply(states, .(region), summarize,#
long=0.5*max(long)+0.5*min(long),#
longdiff=diff(range(long)),#
lat=0.5*max(lat)+0.5*min(lat),#
latdiff=diff(range(lat)))
lstates$region
lstates$abb <- c(state.abb[-c(2,11)][1:7],"DC",state.abb[-c(2,11)][-(1:7)])
lstates <- merge(lstates, alumni[,c("Alumni.of.Iowa.State","region")], by="region")
qplot(long, lat, geom="polygon", fill=Alumni.of.Iowa.State, data=states.alumni, group=group) + theme_nothing() + scale_fill_gradient2(mid="grey90") + opts(title="Alumni by State") + geom_text(aes(x=long,y=lat,label=abb, colour=Alumni.of.Iowa.State), data=subset(lstates,longdiff>1), size=6, hjust=0.5, vjust=0.5, inherit.aes=F) + scale_colour_gradient2(mid=muted("blue"), high="white")
setwd("/Users/heike/packages/lvplot/")
setwd("R")
ls()
q()
